.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/modules/" }
    Modules
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/" }
    Bash
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/array/" }
    array
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/array/dsl/" }
    DSL API :: array
  %hr

%h1
  Module array

%h2 array_is_nonempty()
%p Checks to see if an array with the name given as the first parameter is nonempty.
%h4 Input Parameters
%p The first parameter is the name of the array variable.
%h4 Stream Outputs
%p None.
%h4 Return Codes
%p
  0 if the array is non-empty.
  1 if the array is empty.
%h4 Failure Scenarios
%p Fails if the array name, the first parameter, is not given.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ the_array=(1 2 3 4 5)
      user$ array_is_nonempty the_array
      user$ echo $?
      0
      
      user$ the_array=()
      user$ array_is_nonempty the_array
      user$ echo $?
      1
%h2 array_length()
%p Return the length of the given array.
%h4 Input Parameters
%p First parameter is the name of the array variable.
%h4 Stream Outputs
%p
  Prints the length of the named array to the STDOUT stream of the calling
  environment.
%h4 Return Codes
%p returns 0
%h4 Failure Scenarios
%p Fails if the array name, first parameter, is not given.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ the_array=(1 2 3 4 5)
      user$ array_length the_array
      5
%h2 array_last_element()
%p Print the last element of the given array.
%h4 Input Parameters
%p First parameter is the name of the array variable.
%h4 Stream Outputs
%p
  Prints the last element of the named array to the STDOUT stream of the
  calling environment.
%h4 Failure Scenarios
%p Fails if the array name, first parameter, is not given.
%h4 Return Codes
%p 0 denoting success
%h4 Usage Examples
%pre
  %code
    :preserve
      $ the_array=(one two three four five)
      $ array_last_element the_array
      five
%h2 array_first_element()
%p Print the first element of the given array.
%h4 Input Parameters
%p First parameter is the name of the array variable.
%h4 Stream Outputs
%p
  Prints the first element of the named array to the STDOUT stream of the
  calling environment.
%h4 Return Codes
%p 0 denoting success
%h4 Failure Scenarios
%p Fails if the array name, the first parameter, is not given.
%h4 Usage Examples
%pre
  %code
    :preserve
      $ the_array=(one two three four five)
      $ array_first_element the_array
      one
%h2 array_push()
%p Appends one or more elements to the array with the given name.
%h4 Input Parameters
%p
  The first parameter is the name of the array variable.
  Remaining parameters are the elements to be appended to the array.
%h4 Stream Outputs
%p None.
%h4 Returns
%p 0 denoting success
%h4 Failure Scenarios
%p
  Fails if the array name, the first parameter, is not given.
  Fails if no elements were given (second paramater and beyond).
%h4 Usage Examples
%pre
  %code
    :preserve
      $ the_array=(1 2 3 4 5)
      $ array_length the_array
      5
%h2 array_append()
%p Append elements to a named array.
%h4 Input Parameters
%p
  The first parameter is the name of the array variable.
  Remaining parameters are the elements to append to the end of the array.
%h4 Stream Outputs
%p None.
%h4 Returns
%p 0 denoting success
%h4 Failure Scenarios
%p
  Fails if the array name, the first parameter, is not given.
  Fails if no elements were given to append to the array.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ the_array=(1)
      user$ array_append the_array 2 3 4 5
      user$ array_join the_array # print the contents of the array, space separated.
      1 2 3 4 5
%h2 array_length()
%p Return the length of the given array.
%h4 Input Parameters
%p The first parameter is the name of the array variable.
%h4 Stream Outputs
%p Prints the length of the named array to the STDOUT stream of the calling environment.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ cat $HOME/test
      #!/usr/bin/env bash
      source &quot;/usr/local/bdsm/modules/bash/core/initialize&quot; # Load BDSM framework core.
      modules array
      
      my_array=(1 2 3 4)
      echo ${my_array[@]}
      array_shift my_array
      echo ${my_array[@]}
      
      user$ $HOME/test
      1 2 3 4
      1
      2 3 4
%h2 array_unshift()
%p
  Prepends one or more elements to the array whose name is given, in the order
  given.
%h4 Input Parameters Parameters
%p
  The first parameter is the name of the array variable.
  Remaining parameters are the elements to prepend to the array.
%h4 Stream Outputs
%p
  None.
  Yields a failure message if no array name was given.
  Yields a failure message if no elements were given to unshift.
%h4 Return Codes
%p 0 denoting success
%h4 Usage Examples
%pre
  %code
    :preserve
      $ the_array=(2 3 4 5)
      $ array_unshift 1
      user$ array_join the_array # print the contents of the array, space separated.
      1 2 3 4 5
      
      $ the_array=(4 5)
      $ array_unshift 3 2 1
      user$ array_join the_array # print the contents of the array, space separated.
      1 2 3 4 5
%h2 array_join()
%p Joins the named array into a string separated by either a space or a given string.
%h4 Input Parameters
%p
  The first parameter is the name of the array variable.
  The second parameter is the separator between elements in the string, this is optional and defaults to a space.
%h4 Stream Outputs
%p
  Prints the elements of the named array, separted by either the 2nd parameter
  if given or else a space character, to the STDOUT stream of the calling
  environment.
%h4 Return Codes
%p 0 denoting success
%h4 Failure Scenarios
%p Fails if the array name, the first parameter, is not given.
%h4 Usage Examples
%pre
  %code
    :preserve
      $ the_array=(1 2 3 4 5)
      $ array_join the_array
      1 2 3 4 5
      
      $ array_join the_array '.'
      1.2.3.4.5
%h2 array_largest()
%p Outputs the largest element of the array, in the sense of longest string.
%h4 Input Parameters
%p The first element is an array variable name.
%h4 Stream Outputs
%p
  Prints the largest elements of the named array to the STDOUT
  stream of the calling environment.
%h4 Return Codes
%p 0 denoting success
%h4 Failure Scenarios
%p Fails if the array name, the first parameter, is not given.
%h4 Usage Examples
%pre
  %code
    :preserve
      $ the_array=(1 2 3 4 5)
      $ array_join the_array
      1 2 3 4 5
      
      $ array_join the_array '.'
      1.2.3.4.5
