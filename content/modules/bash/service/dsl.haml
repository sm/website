.breadcrumbs
  %a{ :href => "/" }
    Documentation
  &nbsp;>&nbsp;
  %a{ :href => "/modules/" }
    Modules
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/" }
    Bash
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/service/" }
    service
  &nbsp;>&nbsp;
  %a{ :href => "/modules/bash/service/dsl/" }
    DSL API :: service
  %hr

%h1
  Module service

%p General Services functions.
%h2 services_list()
%p
  List installed services. These are extensions that have loaded the service
  module.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p
  A list of available services to install are printed to STDOUT of
  the calling environment.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  NIY
  No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ services_available
      Available service listing has not yet been implemented.
      This feature has not yet been implemented.
%p General Services functions.
%h2 services_list()
%p
  List installed services. These are extensions that have loaded the service
  module.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p
  A list of available services to install are printed to STDOUT of
  the calling environment.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  NIY
  No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ services_available
      Available service listing has not yet been implemented.
      This feature has not yet been implemented.
%h2 services_installed()
%p
  List installed services. These are extensions that have loaded the service
  module.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p
  A list of installed extensions that load the service module are printed
  to the STDOUT of the calling environment.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  NIY
  No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ services_installed
      nginx unicorn redis postgresql
%h2 services_available()
%p List available services. These are extensions that load the service module.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p
  A list of available extensions that load the service module are printed to
  STDOUT of the calling environment.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  NIY
  No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ services_available
      nginx redis postgresql mongodb ...
%p Single Service functions.
%h2 service_setup()
%p Service setup and configuration.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p
  Creates a system service user with the same name as the service.
  Sets up the service init_d file from template, if it exists.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure scenarios currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_setup
      ...
%h2 service_start()
%p Starts the given service using init scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Whatever stream output comes from the called init script.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if extension was not set.
  Fails if the init script is missing or not executable.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ extension=redis
      user$ service_start
      ...
%h2 service_stop()
%p stops the given service using init scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Whatever stream output comes from the called init script.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if service was not set.
  Fails if the init script is missing or not executable.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_stop
      ...
%h2 service_restart()
%p restarts the given service using init scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Whatever stream output comes from the called init script.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if service was not set.
  Fails if the init script is missing or not executable.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_restart
      ...
%h2 service_status()
%p statuss the given service using init scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Whatever stream output comes from the called init script.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if service was not set.
  Fails if the init script is missing or not executable.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_status
      ...
%h2 service_logtail()
%p logtails the given service using init scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Whatever stream output comes from the called init script.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if service was not set.
  Fails if the init script is missing or not executable.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_logtail
      ...
%h2 service_info()
%p infos the given service using init scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Whatever stream output comes from the called init script.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if service was not set.
  Fails if the init script is missing or not executable.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_info
      ...
%h2 service_configcheck()
%p configchecks the given service using init scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Whatever stream output comes from the called init script.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if service was not set.
  Fails if the init script is missing or not executable.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_configcheck
      ...
%h2 service_usage()
%p usages the given service using init scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Whatever stream output comes from the called init script.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if service was not set.
  Fails if the init script is missing or not executable.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_usage
      ...
%h2 service_cli()
%p clis the given service using init scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Whatever stream output comes from the called init script.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p
  Fails if service was not set.
  Fails if the init script is missing or not executable.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_cli
      ...
%h2 service_pid()
%p
  List installed services. These are extensions that have loaded the service
  module.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p
  A list of extensions that load the service module are printed to STDOUT of
  the calling environment.
%h4 Environmental effects
%p Sets the variable 'service_pid' to contain the pid of the process or 0.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p None currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      root# service=redis
      root# service_pid
      root# echo $service_pid
      0
%h2 service_load_conf_d()
%p
  Load the /etc/conf.d/{service}.conf configuration file into the calling
  environment.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p None, unless the configuration file contains any print statements.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_load_conf_d
%p Service init functions.
%h2 service_install_init_d()
%p Installs the BDSM service module init.d script for the current extension.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging messages informing the end user of what is occurring.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service_install_init_d
%h2 service_init_path()
%p Sets the PATH explicitely for purposes of the current service extension.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p None.
%h4 Environmental effects
%p Alters the PATH variable.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_path
%h2 service_init_start()
%p This is the generalized service init start function.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging telling the end user what is happening.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_start
%h2 service_init_stop()
%p This is the generalized service init stop function.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging telling the end user what is happening.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_stop
%h2 service_init_status()
%p This is the generalized service init status function.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging telling the end user what is happening.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_status
%h2 service_init_usage()
%p This is the generalized service init usage function.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging telling the end user what is happening.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_usage
%h2 service_init_logtail()
%p This is the generalized service init logtail function.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging telling the end user what is happening.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_logtail
%h2 service_conf_d()
%p Installs the conf.d template for the service, if it exists.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging updates to inform the user what is happening.
%h4 Environmental effects
%p
  Once completed a conf.d file should be in place.
  For example /etc/conf.d/redis.conf for the redis service.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_conf_d
%h2 service_init_start()
%p This is the generalized service init start function.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging telling the end user what is happening.
%h4 Environmental effects
%p None.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service_init_start
%h2 service_init_d()
%p The main logic for generalized service init.d scripts.
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging updates to inform the user what is happening.
%h4 Environmental effects
%p May alter the runstate of the service extension.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_init_d
%h2 service_deactivate()
%p Deactivates the named service or
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging updates to inform the user what is happening.
%h4 Environmental effects
%p Changes the current or named service's init script to be nonexecutable.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_deactivate
%h2 service_activate()
%p Activates the named service or
%h4 Input Parameters
%p None.
%h4 Stream Outputs
%p Logging updates to inform the user what is happening.
%h4 Environmental effects
%p Changes the current or named service's init script to be nonexecutable.
%h4 Return Codes
%p 0 for success
%h4 Failure Scenarios
%p No failure conditions currently.
%h4 Usage Examples
%pre
  %code
    :preserve
      user$ service=redis
      user$ service_deactivate
